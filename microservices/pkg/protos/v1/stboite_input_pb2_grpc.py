# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import stboite_input_pb2 as stboite__input__pb2


class TouchInputServiceStub(object):
    """TouchInputService provides an API to handle touch screen event on a specific device.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.HandleTouchEvent = channel.unary_unary(
                '/stboite.v1.input.TouchInputService/HandleTouchEvent',
                request_serializer=stboite__input__pb2.TouchEvent.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class TouchInputServiceServicer(object):
    """TouchInputService provides an API to handle touch screen event on a specific device.
    """

    def HandleTouchEvent(self, request, context):
        """HandleTouchEvent handles a touch screen event comming from the device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TouchInputServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'HandleTouchEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleTouchEvent,
                    request_deserializer=stboite__input__pb2.TouchEvent.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'stboite.v1.input.TouchInputService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TouchInputService(object):
    """TouchInputService provides an API to handle touch screen event on a specific device.
    """

    @staticmethod
    def HandleTouchEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stboite.v1.input.TouchInputService/HandleTouchEvent',
            stboite__input__pb2.TouchEvent.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
